from django.db.models import ManyToManyField
from gbe.models import (
    Performer,
    Persona,
    Profile,
)


class Combo (Performer):
    '''
    Two or more performers (Personae), working together, on a temporary
    or ad-hoc basis. For example, two performers who put together a
    routine for the GBE but do not otherwise perform together would be
    a Combo and not a Troupe. The distinction between Combo and Troupe
    is basically semantic, and the separation is intended to aid in
    maintaining that semantic distinction. If it is inconvenient, the
    separation need not persist in the code.
    '''
    membership = ManyToManyField(Persona,
                                 related_name='combos')
    '''
        Gets all of the people performing in the act.
        For  combo, that is every profile of every member in membership
    '''
    def get_profiles(self):
        profiles = []
        for member in Persona.objects.filter(combos=self):
            profiles += member.get_profiles()
        return profiles

    def get_schedule(self):
        return []

    def append_alerts(self, alerts):
        '''
        Find any alerts generated by this object's data and append them
        to the alerts dict presented as a parameter
        '''
        alerts = super(Combo, self).append_alerts()
        return alerts

    class Meta:
        app_label = "gbe"
