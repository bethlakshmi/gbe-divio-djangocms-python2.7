# Generated by Django 3.0.11 on 2020-12-24 11:45
from django.db import migrations


init_values = [
    {
            'selector': 'body.gbe-body',
            'pseudo_class': '',
            'description': 'Body of the page, except printable pages',
            'target_element': 'div',
            'usage': 'Big Table',
            'prop_val': [('background-color', 'white'),
                         ('color', 'black')]},
    {
            'selector': 'body.gbe-printable',
            'pseudo_class': '',
            'description': 'Body of the page, when it is printable',
            'target_element': 'div',
            'usage': 'Big Table',
            'prop_val': [('background-color', 'white'),
                         ('color', 'black')]},
    {
            'selector': '.gbe-alert-danger',
            'pseudo_class': '',
            'description': 'Alerts that show up dynamically on Error',
            'target_element': 'div',
            'usage': 'Alerts',
            'prop_val': [('background-color', '#f8d7da'),
                         ('border-color', '#f5c6cb'),
                         ('color', '#721c24')]},
    {
            'selector': '.gbe-alert-info',
            'pseudo_class': '',
            'description': 'Alerts that show up dynamically as Information',
            'target_element': 'div',
            'usage': 'Alerts',
            'prop_val': [('background-color', '#d1ecf1'),
                         ('border-color', '#bee5eb'),
                         ('color', '#0c5460')]},
    {
            'selector': '.gbe-alert-success',
            'pseudo_class': '',
            'description': 'Alerts that show up dynamically on Success',
            'target_element': 'div',
            'usage': 'Alerts',
            'prop_val': [('background-color', '#d4edda'),
                         ('border-color', '#c3e6cb'),
                         ('color', '#155724')]},
    {
            'selector': '.gbe-alert-warning',
            'pseudo_class': '',
            'description': 'Alerts that show up dynamically on Warning',
            'target_element': 'div',
            'usage': 'Alerts',
            'prop_val': [('background-color', '#fff3cd'),
                         ('border-color', '#ffeeba'),
                         ('color', '#856404')]},
    {
            'selector': '.gbe-btn-primary',
            'pseudo_class': 'hover',
            'description': 'Buttons do the main work flow.',
            'target_element': 'input',
            'usage': 'Forms',
            'prop_val': [('background-color', '#471f1f'),
                         ('border-color', '#471f1f'),
                         ('color', '#fff')]},
    {
            'selector': '.gbe-btn-primary',
            'pseudo_class': '',
            'description': 'Buttons do the main work flow.',
            'target_element': 'input',
            'usage': 'Forms',
            'prop_val': [('background-color', 'rgb(107, 46, 46)'),
                         ('border-color', '#471f1f'),
                         ('color', '#fff')]},
    {
            'selector': '.login-button',
            'pseudo_class': '',
            'description': 'Login drop down button on nav bar.',
            'target_element': 'button',
            'usage': 'General',
            'prop_val': [('color', 'white'),
                         ('background-color', 'rgb(107, 46, 46)'),
                         ('border-color', '#471f1f')]},
    {
            'selector': '.login-button',
            'pseudo_class': 'hover',
            'description': 'Login drop down button on nav bar, hover.',
            'target_element': 'button',
            'usage': 'General',
            'prop_val': [('color', 'light grey')]},
    {
            'selector': '#login-dp',
            'pseudo_class': '',
            'description': 'The drop down for login, upper right under menu.',
            'target_element': 'div',
            'usage': 'General',
            'prop_val': [('background-color', 'rgba(180, 80, 80)'),
                         ('color', '#212529')]},
    {
            'selector': '#login-dp a',
            'pseudo_class': '',
            'description': 'Links in the login dropdown',
            'target_element': 'a',
            'usage': 'General',
            'prop_val': [('color', 'white')]},
    {
            'selector': '#login-dp .bottom',
            'pseudo_class': '',
            'description': 'Bottom of the login box - box for new users',
            'target_element': 'div',
            'usage': 'General',
            'prop_val': [('background-color', 'rgba(180, 80, 80)'),
                         ('border-top-color', '#ddd'),
                         ('color', 'white')]},
    {
            'selector': '.gbe-navbar-default',
            'pseudo_class': '',
            'description': 'Navbar in default state - the not-active options',
            'target_element': 'div',
            'usage': 'Navbar',
            'prop_val': [('background-color', 'rgba(229,229,229,.49)'),
                         ('border-color', 'transparent')]},
    {
            'selector': '#gbe_header_menu',
            'pseudo_class': 'hover',
            'description': 'Non-active text in navbar, on hoever.',
            'target_element': 'font',
            'usage': 'Navbar',
            'prop_val': [('color', '#af1515'),
                         ('background-color', 'transparent')]},
    {
            'selector': '.active>#gbe_header_menu',
            'pseudo_class': '',
            'description': 'Currenty active navbar menu item, matches panel of content.',
            'target_element': 'a',
            'usage': 'Navbar',
            'prop_val': [('background-color', '#ebebeb'),
                         ('text-shadow', '0px 0px 8px #F03')]},
    {
            'selector': '.gbe-dropdown-menu',
            'pseudo_class': '',
            'description': 'Dropdown navigational menu (any level)',
            'target_element': 'ul',
            'usage': 'Navbar',
            'prop_val': [('background-color', '#ad0325')]},
    {
            'selector': '#gbe_dropdown',
            'pseudo_class': '',
            'description': 'Dropdown menu text',
            'target_element': 'a',
            'usage': 'Navbar',
            'prop_val': [('color', '#fff')]},
    {
            'selector': '#gbe_dropdown',
            'pseudo_class': 'hover',
            'description': 'Dropdown menu text, on hover',
            'target_element': 'a',
            'usage': 'Navbar',
            'prop_val': [('color', '#e9faa3'),
                         ('background-color', "#000")]},
    {
            'selector': '.gbe-panel',
            'pseudo_class': '',
            'description': 'top level panel on every page, all content is inside',
            'target_element': 'div',
            'usage': 'General',
            'prop_val': [('background-color', '#ebebeb'),
                         ('border-color', 'ddd')]},
    {
            'selector': '.gbe-footer',
            'pseudo_class': '',
            'description': 'footer at bottom of every page',
            'target_element': 'div',
            'usage': 'General',
            'prop_val': [('color', '#fff'),
                         ('background-color', 'transparent'),
                         ('border-color', 'transparent')]}]


def initialize_style(apps, schema_editor):
    # We get the model from the versioned app registry;
    # if we directly import it, it'll be the wrong version
    StyleVersion = apps.get_model("gbe", "StyleVersion")
    StyleSelector = apps.get_model("gbe", "StyleSelector")
    StyleProperty = apps.get_model("gbe", "StyleProperty")
    StyleValue = apps.get_model("gbe", "StyleValue")
    version = StyleVersion(
        name="Baseline",
        number=1.0,
        currently_live=True,
        currently_test=True)
    version.save()

    for select_val in init_values:
        selector = StyleSelector(
            selector=select_val['selector'],
            description=select_val['description'],
            pseudo_class=select_val['pseudo_class'],
            target_element_usage=select_val['target_element'],
            used_for=select_val['usage'])
        selector.save()
        for prop, val in select_val['prop_val']:
            style_prop = StyleProperty(
                selector=selector,
                style_property=prop,
                value_type='color')
            style_prop.save()
            value = StyleValue(style_property=style_prop,
                               style_version=version,
                               value=val)
            value.save()


def destroy_style(apps, schema_editor):
    StyleVersion = apps.get_model("gbe", "StyleVersion")
    StyleSelector = apps.get_model("gbe", "StyleSelector")
    StyleVersion.objects.filter(name="Baseline", number=1.0).delete()
    for select_val in init_values:
        StyleSelector.objects.filter(
            selector=select_val['selector'],
            pseudo_class=select_val['pseudo_class']).delete()


class Migration(migrations.Migration):

    dependencies = [
        ('gbe', '0003_auto_20201224_0729'),
    ]

    operations = [
        migrations.RunPython(initialize_style, reverse_code=destroy_style),
    ]
