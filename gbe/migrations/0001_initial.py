# Generated by Django 3.0.8 on 2020-08-23 18:04

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import filer.fields.image


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('scheduler', '0001_initial'),
        migrations.swappable_dependency(settings.FILER_IMAGE_MODEL),
        ('post_office', '0008_attachment_headers'),
    ]

    operations = [
        migrations.CreateModel(
            name='ActCastingOption',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('casting', models.CharField(max_length=50, unique=True)),
                ('show_as_special', models.BooleanField(default=True)),
                ('display_order', models.IntegerField(unique=True)),
            ],
            options={
                'ordering': ['display_order'],
            },
        ),
        migrations.CreateModel(
            name='AvailableInterest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('interest', models.CharField(max_length=128, unique=True)),
                ('visible', models.BooleanField(default=True)),
                ('help_text', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Biddable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('b_title', models.CharField(max_length=128)),
                ('b_description', models.TextField(blank=True)),
                ('submitted', models.BooleanField(default=False)),
                ('accepted', models.IntegerField(choices=[(0, 'No Decision'), (1, 'Reject'), (2, 'Wait List'), (3, 'Accepted'), (4, 'Withdrawn'), (5, 'Duplicate')], default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'biddable item',
                'verbose_name_plural': 'biddable items',
            },
        ),
        migrations.CreateModel(
            name='Conference',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('conference_name', models.CharField(max_length=128)),
                ('conference_slug', models.SlugField()),
                ('status', models.CharField(choices=[('upcoming', 'upcoming'), ('ongoing', 'ongoing'), ('completed', 'completed')], default='upcoming', max_length=50)),
                ('accepting_bids', models.BooleanField(default=False)),
                ('act_style', models.CharField(choices=[('normal', 'normal'), ('summer', 'summer')], default='normal', max_length=50)),
            ],
            options={
                'verbose_name': 'conference',
                'verbose_name_plural': 'conferences',
            },
        ),
        migrations.CreateModel(
            name='EvaluationCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=128, unique=True)),
                ('visible', models.BooleanField(default=True)),
                ('help_text', models.TextField(blank=True)),
            ],
            options={
                'verbose_name_plural': 'Evaluation Categories',
                'ordering': ['category'],
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('eventitem_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, to='scheduler.EventItem')),
                ('e_title', models.CharField(max_length=128)),
                ('e_description', models.TextField()),
                ('blurb', models.TextField(blank=True)),
                ('duration', models.DurationField()),
                ('notes', models.TextField(blank=True)),
                ('event_id', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'ordering': ['e_title'],
            },
            bases=('scheduler.eventitem',),
        ),
        migrations.CreateModel(
            name='Performer',
            fields=[
                ('workeritem_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='scheduler.WorkerItem')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('homepage', models.URLField(blank=True)),
                ('bio', models.TextField()),
                ('experience', models.PositiveIntegerField()),
                ('awards', models.TextField(blank=True)),
                ('festivals', models.TextField(blank=True)),
            ],
            options={
                'ordering': ['name'],
            },
            bases=('scheduler.workeritem',),
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('workeritem_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='scheduler.WorkerItem')),
                ('display_name', models.CharField(blank=True, max_length=128)),
                ('purchase_email', models.CharField(blank=True, default='', max_length=64)),
                ('address1', models.CharField(blank=True, max_length=128)),
                ('address2', models.CharField(blank=True, max_length=128)),
                ('city', models.CharField(blank=True, max_length=128)),
                ('state', models.CharField(blank=True, choices=[('AL', 'Alabama'), ('AK', 'Alaska'), ('AZ', 'Arizona'), ('AR', 'Arkansas'), ('CA', 'California'), ('CO', 'Colorado'), ('CT', 'Connecticut'), ('DE', 'Delaware'), ('FL', 'Florida'), ('GA', 'Georgia'), ('HI', 'Hawaii'), ('ID', 'Idaho'), ('IL', 'Illinois'), ('IN', 'Indiana'), ('IA', 'Iowa'), ('KS', 'Kansas'), ('KY', 'Kentucky'), ('LA', 'Louisiana'), ('ME', 'Maine'), ('MD', 'Maryland'), ('MA', 'Massachusetts'), ('MI', 'Michigan'), ('MN', 'Minnesota'), ('MS', 'Mississippi'), ('MO', 'Missouri'), ('MT', 'Montana'), ('NE', 'Nebraska'), ('NV', 'Nevada'), ('NH', 'New Hampshire'), ('NJ', 'New Jersey'), ('NM', 'New Mexico'), ('NY', 'New York'), ('NC', 'North Carolina'), ('ND', 'North Dakota'), ('OH', 'Ohio'), ('OK', 'Oklahoma'), ('OR', 'Oregon'), ('PA', 'Pennsylvania'), ('RI', 'Rhode Island'), ('SC', 'South Carolina'), ('SD', 'South Dakota'), ('TN', 'Tennessee'), ('TX', 'Texas'), ('UT', 'Utah'), ('VT', 'Vermont'), ('VA', 'Virginia'), ('WA', 'Washington'), ('WV', 'West Virginia'), ('WI', 'Wisconsin'), ('WY', 'Wyoming'), ('OTHER', 'Other/Non-US')], max_length=5)),
                ('zip_code', models.CharField(blank=True, max_length=10)),
                ('country', models.CharField(blank=True, max_length=128)),
                ('phone', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator(message='Phone numbers must be in a standard US format, such as ###-###-###.', regex='(\\d{3}[-\\.]?\\d{3}[-\\.]?\\d{4})')])),
                ('best_time', models.CharField(blank=True, choices=[('Any', 'Any'), ('Mornings', 'Mornings'), ('Afternoons', 'Afternoons'), ('Evenings', 'Evenings')], default='Any', max_length=50)),
                ('how_heard', models.TextField(blank=True)),
                ('user_object', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['display_name'],
            },
            bases=('scheduler.workeritem',),
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('locationitem_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='scheduler.LocationItem')),
                ('name', models.CharField(max_length=50)),
                ('capacity', models.IntegerField()),
                ('overbook_size', models.IntegerField()),
                ('address', models.TextField(blank=True, help_text='This can include HTML, and it will be for formatting.', max_length=500)),
                ('map_embed', models.TextField(blank=True, help_text='Use the embedded map instructions and this will display on event pages.  With Google, small size is recommended.', max_length=1000)),
                ('conferences', models.ManyToManyField(to='gbe.Conference')),
            ],
            bases=('scheduler.locationitem',),
        ),
        migrations.CreateModel(
            name='TechInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('track_title', models.CharField(blank=True, max_length=128)),
                ('track_artist', models.CharField(blank=True, max_length=123)),
                ('duration', models.DurationField(null=True)),
                ('feel_of_act', models.TextField(blank=True)),
                ('introduction_text', models.TextField(blank=True, max_length=1000)),
                ('read_exact', models.BooleanField(default=False)),
                ('prop_setup', models.TextField(blank=True)),
                ('crew_instruct', models.TextField(blank=True)),
                ('pronouns', models.CharField(blank=True, max_length=128)),
                ('primary_color', models.CharField(blank=True, max_length=128)),
                ('secondary_color', models.CharField(blank=True, max_length=128)),
                ('follow_spot', models.BooleanField(default=False)),
                ('starting_position', models.CharField(blank=True, max_length=128)),
                ('track', models.FileField(blank=True, upload_to='uploads/audio')),
                ('confirm_no_music', models.BooleanField(default=False)),
                ('mic_choice', models.CharField(choices=[("I don't need a mic", "I don't need a mic"), ('I need a mic', 'I need a mic'), ('I own a mic', 'I own a mic')], default="I don't need a mic", max_length=200)),
                ('background_color', models.CharField(blank=True, max_length=128)),
                ('wash_color', models.CharField(blank=True, max_length=128)),
                ('follow_spot_color', models.CharField(blank=True, max_length=128)),
                ('special_lighting_cue', models.TextField(blank=True)),
                ('start_blackout', models.BooleanField(default=False)),
                ('end_blackout', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name_plural': 'tech info',
            },
        ),
        migrations.CreateModel(
            name='Act',
            fields=[
                ('biddable_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='gbe.Biddable')),
                ('video_link', models.URLField(blank=True)),
                ('video_choice', models.CharField(blank=True, choices=[('0', "I don't have any video of myself performing"), ('1', "This is video of me but not the act I'm submitting"), ('2', 'This is video of the act I would like to perform')], max_length=2)),
                ('shows_preferences', models.TextField(blank=True)),
                ('other_performance', models.TextField(blank=True)),
                ('why_you', models.TextField(blank=True)),
            ],
            bases=('gbe.biddable',),
        ),
        migrations.CreateModel(
            name='Persona',
            fields=[
                ('performer_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='gbe.Performer')),
                ('performer_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='personae', to='gbe.Profile')),
            ],
            options={
                'verbose_name_plural': 'personae',
            },
            bases=('gbe.performer',),
        ),
        migrations.CreateModel(
            name='Show',
            fields=[
                ('event_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='gbe.Event')),
                ('cue_sheet', models.CharField(choices=[('Theater', 'Theater'), ('Alternate', 'Alternate'), ('None', 'None')], default='Theater', max_length=128)),
            ],
            bases=('gbe.event',),
        ),
        migrations.CreateModel(
            name='Volunteer',
            fields=[
                ('biddable_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='gbe.Biddable')),
                ('number_shifts', models.IntegerField(choices=[(2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12)])),
                ('availability', models.TextField(blank=True)),
                ('unavailability', models.TextField(blank=True)),
                ('opt_outs', models.TextField(blank=True)),
                ('pre_event', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False)),
                ('background', models.TextField()),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='volunteering', to='gbe.Profile')),
            ],
            bases=('gbe.biddable',),
        ),
        migrations.CreateModel(
            name='UserMessage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('summary', models.CharField(max_length=128)),
                ('description', models.TextField(max_length=3000)),
                ('view', models.CharField(max_length=128)),
                ('code', models.CharField(max_length=128)),
            ],
            options={
                'unique_together': {('view', 'code')},
            },
        ),
        migrations.CreateModel(
            name='ProfilePreferences',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('in_hotel', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Maybe', 'Maybe')], max_length=10)),
                ('inform_about', models.TextField(blank=True)),
                ('show_hotel_infobox', models.BooleanField(default=True)),
                ('send_daily_schedule', models.BooleanField(default=True)),
                ('send_bid_notifications', models.BooleanField(default=True)),
                ('send_role_notifications', models.BooleanField(default=True)),
                ('send_schedule_change_notifications', models.BooleanField(default=True)),
                ('profile', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='preferences', to='gbe.Profile')),
            ],
            options={
                'verbose_name_plural': 'profile preferences',
            },
        ),
        migrations.AddField(
            model_name='performer',
            name='contact',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contact', to='gbe.Profile'),
        ),
        migrations.AddField(
            model_name='performer',
            name='img',
            field=filer.fields.image.FilerImageField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='image_performer', to=settings.FILER_IMAGE_MODEL),
        ),
        migrations.AddField(
            model_name='event',
            name='default_location',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='gbe.Room'),
        ),
        migrations.AddField(
            model_name='event',
            name='e_conference',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='e_conference_set', to='gbe.Conference'),
        ),
        migrations.CreateModel(
            name='EmailTemplateSender',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_email', models.EmailField(max_length=254)),
                ('template', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='sender', to='post_office.EmailTemplate')),
            ],
            options={
                'ordering': ['template__name'],
            },
        ),
        migrations.CreateModel(
            name='ConferenceDay',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.DateField(blank=True)),
                ('open_to_public', models.BooleanField(default=True)),
                ('conference', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gbe.Conference')),
            ],
            options={
                'verbose_name': 'Conference Day',
                'verbose_name_plural': 'Conference Days',
                'ordering': ['day'],
            },
        ),
        migrations.CreateModel(
            name='ClassProposal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128)),
                ('name', models.CharField(blank=True, max_length=128)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('proposal', models.TextField()),
                ('type', models.CharField(choices=[('Class', 'Class'), ('Panel', 'Panel'), ('Either', 'Either')], default='Class', max_length=20)),
                ('display', models.BooleanField(default=False)),
                ('conference', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='gbe.Conference')),
            ],
        ),
        migrations.CreateModel(
            name='BidEvaluation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vote', models.IntegerField(choices=[(1, 'Strong yes'), (2, 'Yes'), (3, 'Weak Yes'), (4, 'No Comment'), (5, 'Weak No'), (6, 'No'), (7, 'Strong No'), (-1, 'Abstain')])),
                ('notes', models.TextField(blank=True)),
                ('bid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gbe.Biddable')),
                ('evaluator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gbe.Profile')),
            ],
        ),
        migrations.AddField(
            model_name='biddable',
            name='b_conference',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='b_conference_set', to='gbe.Conference'),
        ),
        migrations.CreateModel(
            name='Vendor',
            fields=[
                ('biddable_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='gbe.Biddable')),
                ('website', models.URLField(blank=True)),
                ('physical_address', models.TextField()),
                ('publish_physical_address', models.BooleanField(default=False)),
                ('want_help', models.BooleanField(blank=True, choices=[(True, 'Yes'), (False, 'No')], default=False)),
                ('help_description', models.TextField(blank=True)),
                ('help_times', models.TextField(blank=True)),
                ('level', models.CharField(blank=True, choices=[('Featured', 'Featured')], default='', max_length=128)),
                ('img', filer.fields.image.FilerImageField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='image_vendor', to=settings.FILER_IMAGE_MODEL)),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gbe.Profile')),
            ],
            bases=('gbe.biddable',),
        ),
        migrations.CreateModel(
            name='Troupe',
            fields=[
                ('performer_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='gbe.Performer')),
                ('membership', models.ManyToManyField(related_name='troupes', to='gbe.Persona')),
            ],
            bases=('gbe.performer',),
        ),
        migrations.CreateModel(
            name='StaffArea',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128)),
                ('slug', models.SlugField()),
                ('description', models.TextField()),
                ('default_volunteers', models.IntegerField(blank=True, default='1', null=True)),
                ('conference', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gbe.Conference')),
                ('default_location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='gbe.Room')),
                ('staff_lead', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='gbe.Profile')),
            ],
            options={
                'ordering': ['conference', 'title'],
                'unique_together': {('title', 'conference'), ('slug', 'conference')},
            },
        ),
        migrations.CreateModel(
            name='ShowVote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vote', models.IntegerField(blank=True, choices=[(1, 'Strong yes'), (2, 'Yes'), (3, 'Weak Yes'), (4, 'No Comment'), (5, 'Weak No'), (6, 'No'), (7, 'Strong No'), (-1, 'Abstain')], null=True)),
                ('show', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='gbe.Show')),
            ],
            options={
                'verbose_name': 'show vote',
                'verbose_name_plural': 'show votes',
            },
        ),
        migrations.CreateModel(
            name='PerformerFestivals',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('festival', models.CharField(choices=[('GBE', 'The Great Burlesque Exposition'), ('BHOF', 'Miss Exotic World/Burlesque Hall of Fame'), ('NYBF', 'New York Burlesque Festival'), ('NOBF', 'New Orleans Burlesque Festival'), ('TBF', 'Texas Burlesque Festival')], max_length=20)),
                ('experience', models.CharField(choices=[('No', 'No'), ('Yes', 'Yes'), ('Won', 'Yes - and Won!')], default='No', max_length=20)),
                ('act', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gbe.Act')),
            ],
            options={
                'verbose_name_plural': 'performer festivals',
            },
        ),
        migrations.CreateModel(
            name='GenericEvent',
            fields=[
                ('event_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='gbe.Event')),
                ('type', models.CharField(choices=[('Special', 'Special Event'), ('Volunteer', 'Volunteer Opportunity'), ('Master', 'Master Class'), ('Drop-In', 'Drop-In Class'), ('Rehearsal Slot', 'Rehearsal Slot')], default='Special', max_length=128)),
                ('volunteer_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='gbe.AvailableInterest')),
            ],
            bases=('gbe.event',),
        ),
        migrations.CreateModel(
            name='FlexibleEvaluation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ranking', models.IntegerField(blank=True, validators=[django.core.validators.MinValueValidator(-1), django.core.validators.MaxValueValidator(5)])),
                ('bid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gbe.Biddable')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gbe.EvaluationCategory')),
                ('evaluator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gbe.Profile')),
            ],
            options={
                'unique_together': {('bid', 'evaluator', 'category')},
            },
        ),
        migrations.CreateModel(
            name='Costume',
            fields=[
                ('biddable_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='gbe.Biddable')),
                ('creator', models.CharField(max_length=128)),
                ('act_title', models.CharField(blank=True, max_length=128, null=True)),
                ('debut_date', models.CharField(blank=True, max_length=128, null=True)),
                ('active_use', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=True)),
                ('pieces', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(20)])),
                ('pasties', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False)),
                ('dress_size', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(20)])),
                ('more_info', models.TextField(blank=True)),
                ('picture', models.FileField(blank=True, upload_to='uploads/images')),
                ('performer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='gbe.Persona')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='costumes', to='gbe.Profile')),
            ],
            bases=('gbe.biddable',),
        ),
        migrations.CreateModel(
            name='ConferenceVolunteer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('how_volunteer', models.CharField(choices=[('Teacher', 'Teacher'), ('Moderator', 'Moderator'), ('Panelist', 'Panelist'), ('Any of the Above', 'Any of the Above')], default='Any of the Above', max_length=20)),
                ('qualification', models.TextField(blank='True')),
                ('volunteering', models.BooleanField(blank='True', default=True)),
                ('bid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gbe.ClassProposal')),
                ('presenter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conf_volunteer', to='gbe.Persona')),
            ],
        ),
        migrations.CreateModel(
            name='Class',
            fields=[
                ('event_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, to='gbe.Event')),
                ('biddable_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='gbe.Biddable')),
                ('minimum_enrollment', models.IntegerField(blank=True, default=1)),
                ('maximum_enrollment', models.IntegerField(blank=True, default=20, null=True)),
                ('organization', models.CharField(blank=True, max_length=128)),
                ('type', models.CharField(blank=True, choices=[('Lecture', 'Lecture'), ('Movement', 'Movement'), ('Panel', 'Panel'), ('Workshop', 'Workshop')], default='Lecture', max_length=128)),
                ('fee', models.IntegerField(blank=True, default=0, null=True)),
                ('other_teachers', models.CharField(blank=True, max_length=128)),
                ('length_minutes', models.IntegerField(blank=True, choices=[(60, '60'), (90, '90'), (120, '120')], default=60)),
                ('history', models.TextField(blank=True)),
                ('run_before', models.TextField(blank=True)),
                ('schedule_constraints', models.TextField(blank=True)),
                ('avoided_constraints', models.TextField(blank=True)),
                ('space_needs', models.CharField(blank=True, choices=[('Movement Class Floor', (('0', "Don't Care about Floor"), ('1', 'Carpet'), ('2', 'Dance Floor'), ('3', 'Both'))), ('Lecture Class Setup', (('4', "Don't Care about Seating"), ('5', 'Lecture Style - tables and chairs face podium'), ('6', 'Conversational - seating in a ring')))], default='', max_length=128)),
                ('physical_restrictions', models.TextField(blank=True)),
                ('multiple_run', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=20)),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='is_teaching', to='gbe.Persona')),
            ],
            options={
                'verbose_name_plural': 'classes',
            },
            bases=('gbe.biddable', 'gbe.event'),
        ),
        migrations.CreateModel(
            name='ActBidEvaluation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notes', models.TextField(blank=True)),
                ('evaluator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gbe.Profile')),
                ('primary_vote', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='primary_vote', to='gbe.ShowVote')),
                ('secondary_vote', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='secondary_vote', to='gbe.ShowVote')),
                ('bid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gbe.Act')),
            ],
            options={
                'verbose_name': 'act bid evaluation',
                'verbose_name_plural': 'act bid evaluations',
            },
        ),
        migrations.AddField(
            model_name='act',
            name='performer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='acts', to='gbe.Performer'),
        ),
        migrations.AddField(
            model_name='act',
            name='tech',
            field=models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, to='gbe.TechInfo'),
        ),
        migrations.CreateModel(
            name='VolunteerInterest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rank', models.IntegerField(blank=True, choices=[(0, '--------------'), (1, 'Not interested'), (2, 'Slightly interested'), (3, 'Neither interested nor disinterested'), (4, 'Somewhat interested'), (5, 'Strongly interested')])),
                ('interest', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gbe.AvailableInterest')),
                ('volunteer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gbe.Volunteer')),
            ],
            options={
                'unique_together': {('interest', 'volunteer')},
            },
        ),
    ]
