# -*- coding: utf-8 -*-
# Generated by Django 1.11.23 on 2019-09-19 08:25


import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True,
                                        primary_key=True,
                                        serialize=False,
                                        verbose_name='ID')),
                ('starttime', models.DateTimeField(blank=True)),
                ('max_volunteer', models.PositiveIntegerField(default=0)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EventContainer',
            fields=[
                ('id', models.AutoField(auto_created=True,
                                        primary_key=True,
                                        serialize=False,
                                        verbose_name='ID')),
                ('child_event', models.OneToOneField(
                    on_delete=django.db.models.deletion.CASCADE,
                    related_name='container_event',
                    to='scheduler.Event')),
                ('parent_event', models.ForeignKey(
                    on_delete=django.db.models.deletion.CASCADE,
                    related_name='contained_events',
                    to='scheduler.Event')),
            ],
        ),
        migrations.CreateModel(
            name='EventEvalBoolean',
            fields=[
                ('id', models.AutoField(auto_created=True,
                                        primary_key=True,
                                        serialize=False,
                                        verbose_name='ID')),
                ('answer', models.BooleanField()),
                ('event', models.ForeignKey(
                    on_delete=django.db.models.deletion.CASCADE,
                    to='scheduler.Event')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EventEvalComment',
            fields=[
                ('id', models.AutoField(auto_created=True,
                                        primary_key=True,
                                        serialize=False,
                                        verbose_name='ID')),
                ('answer', models.TextField(blank=True, max_length=500)),
                ('event', models.ForeignKey(
                    on_delete=django.db.models.deletion.CASCADE,
                    to='scheduler.Event')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EventEvalGrade',
            fields=[
                ('id', models.AutoField(auto_created=True,
                                        primary_key=True,
                                        serialize=False,
                                        verbose_name='ID')),
                ('answer', models.IntegerField(
                    blank=True,
                    choices=[(4, b'A'),
                             (3, b'B'),
                             (2, b'C'),
                             (1, b'D'),
                             (0, b'F'),
                             (None, b'NA')],
                    null=True,
                    validators=[django.core.validators.MinValueValidator(-1),
                                django.core.validators.MaxValueValidator(5)])),
                ('event', models.ForeignKey(
                    on_delete=django.db.models.deletion.CASCADE,
                    to='scheduler.Event')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EventEvalQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True,
                                        primary_key=True,
                                        serialize=False,
                                        verbose_name='ID')),
                ('question', models.CharField(max_length=200)),
                ('visible', models.BooleanField(default=True)),
                ('help_text', models.TextField(blank=True, max_length=500)),
                ('order', models.IntegerField()),
                ('answer_type', models.CharField(
                    choices=[(b'grade', b'grade'),
                             (b'text', b'text'),
                             (b'boolean', b'boolean')],
                    max_length=20)),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='EventItem',
            fields=[
                ('eventitem_id', models.AutoField(primary_key=True,
                                                  serialize=False)),
                ('visible', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='EventLabel',
            fields=[
                ('id', models.AutoField(auto_created=True,
                                        primary_key=True,
                                        serialize=False,
                                        verbose_name='ID')),
                ('text', models.CharField(default=b'', max_length=200)),
                ('event', models.ForeignKey(
                    on_delete=django.db.models.deletion.CASCADE,
                    to='scheduler.Event')),
            ],
        ),
        migrations.CreateModel(
            name='Label',
            fields=[
                ('id', models.AutoField(auto_created=True,
                                        primary_key=True,
                                        serialize=False,
                                        verbose_name='ID')),
                ('text', models.TextField(default=b'')),
            ],
        ),
        migrations.CreateModel(
            name='Ordering',
            fields=[
                ('id', models.AutoField(auto_created=True,
                                        primary_key=True,
                                        serialize=False,
                                        verbose_name='ID')),
                ('order', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('id', models.AutoField(auto_created=True,
                                        primary_key=True,
                                        serialize=False,
                                        verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='ResourceAllocation',
            fields=[
                ('id', models.AutoField(auto_created=True,
                                        primary_key=True,
                                        serialize=False,
                                        verbose_name='ID')),
                ('event', models.ForeignKey(
                    on_delete=django.db.models.deletion.CASCADE,
                    related_name='resources_allocated',
                    to='scheduler.Event')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ResourceItem',
            fields=[
                ('resourceitem_id', models.AutoField(primary_key=True,
                                                     serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='ActItem',
            fields=[
                ('resourceitem_ptr', models.OneToOneField(
                    auto_created=True,
                    on_delete=django.db.models.deletion.CASCADE,
                    parent_link=True,
                    primary_key=True,
                    serialize=False,
                    to='scheduler.ResourceItem')),
            ],
            bases=('scheduler.resourceitem',),
        ),
        migrations.CreateModel(
            name='ActResource',
            fields=[
                ('resource_ptr', models.OneToOneField(
                    auto_created=True,
                    on_delete=django.db.models.deletion.CASCADE,
                    parent_link=True,
                    primary_key=True,
                    serialize=False,
                    to='scheduler.Resource')),
                ('role', models.CharField(blank=True, max_length=50)),
                ('_item', models.ForeignKey(
                    on_delete=django.db.models.deletion.CASCADE,
                    to='scheduler.ActItem')),
            ],
            bases=('scheduler.resource',),
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('resource_ptr', models.OneToOneField(
                    auto_created=True,
                    on_delete=django.db.models.deletion.CASCADE,
                    parent_link=True,
                    primary_key=True,
                    serialize=False,
                    to='scheduler.Resource')),
            ],
            bases=('scheduler.resource',),
        ),
        migrations.CreateModel(
            name='LocationItem',
            fields=[
                ('resourceitem_ptr', models.OneToOneField(
                    auto_created=True,
                    on_delete=django.db.models.deletion.CASCADE,
                    parent_link=True,
                    primary_key=True,
                    serialize=False,
                    to='scheduler.ResourceItem')),
            ],
            bases=('scheduler.resourceitem',),
        ),
        migrations.CreateModel(
            name='Worker',
            fields=[
                ('resource_ptr', models.OneToOneField(
                    auto_created=True,
                    on_delete=django.db.models.deletion.CASCADE,
                    parent_link=True,
                    primary_key=True,
                    serialize=False,
                    to='scheduler.Resource')),
                ('role', models.CharField(
                    blank=True,
                    choices=[(b'Interested', b'Interested'),
                             (b'Moderator', b'Moderator'),
                             (b'Panelist', b'Panelist'),
                             (b'Performer', b'Performer'),
                             (b'Producer', b'Producer'),
                             (b'Staff Lead', b'Staff Lead'),
                             (b'Teacher', b'Teacher'),
                             (b'Technical Director', b'Technical Director'),
                             (b'Volunteer', b'Volunteer')],
                    max_length=50)),
            ],
            bases=('scheduler.resource',),
        ),
        migrations.CreateModel(
            name='WorkerItem',
            fields=[
                ('resourceitem_ptr', models.OneToOneField(
                    auto_created=True,
                    on_delete=django.db.models.deletion.CASCADE,
                    parent_link=True,
                    primary_key=True,
                    serialize=False,
                    to='scheduler.ResourceItem')),
            ],
            bases=('scheduler.resourceitem',),
        ),
        migrations.AddField(
            model_name='resourceallocation',
            name='resource',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name='allocations', to='scheduler.Resource'),
        ),
        migrations.AddField(
            model_name='ordering',
            name='allocation',
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                to='scheduler.ResourceAllocation'),
        ),
        migrations.AddField(
            model_name='label',
            name='allocation',
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                to='scheduler.ResourceAllocation'),
        ),
        migrations.AlterUniqueTogether(
            name='eventevalquestion',
            unique_together=set([('order',), ('question',)]),
        ),
        migrations.AddField(
            model_name='eventevalgrade',
            name='question',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to='scheduler.EventEvalQuestion'),
        ),
        migrations.AddField(
            model_name='eventevalcomment',
            name='question',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to='scheduler.EventEvalQuestion'),
        ),
        migrations.AddField(
            model_name='eventevalboolean',
            name='question',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to='scheduler.EventEvalQuestion'),
        ),
        migrations.AddField(
            model_name='event',
            name='eventitem',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name='scheduler_events',
                to='scheduler.EventItem'),
        ),
        migrations.AddField(
            model_name='worker',
            name='_item',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to='scheduler.WorkerItem'),
        ),
        migrations.AddField(
            model_name='location',
            name='_item',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to='scheduler.LocationItem'),
        ),
        migrations.AlterUniqueTogether(
            name='eventlabel',
            unique_together=set([('text', 'event')]),
        ),
        migrations.AddField(
            model_name='eventevalgrade',
            name='profile',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to='scheduler.WorkerItem'),
        ),
        migrations.AddField(
            model_name='eventevalcomment',
            name='profile',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to='scheduler.WorkerItem'),
        ),
        migrations.AddField(
            model_name='eventevalboolean',
            name='profile',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to='scheduler.WorkerItem'),
        ),
        migrations.AlterUniqueTogether(
            name='eventevalgrade',
            unique_together=set([('profile', 'event', 'question')]),
        ),
        migrations.AlterUniqueTogether(
            name='eventevalcomment',
            unique_together=set([('profile', 'event', 'question')]),
        ),
        migrations.AlterUniqueTogether(
            name='eventevalboolean',
            unique_together=set([('profile', 'event', 'question')]),
        ),
    ]
