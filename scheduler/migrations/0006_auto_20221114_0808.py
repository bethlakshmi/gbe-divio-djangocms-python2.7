# Generated by Django 3.2.16 on 2022-11-14 08:08

from django.db import migrations


def migrate_event_inheritance(apps, schema_editor):
    EventContainer = apps.get_model("scheduler", "EventContainer")
    for relation in EventContainer.objects.all():
        relation.child_event.parent = relation.parent_event
        relation.child_event.save()
        print("converted %s with parent %s" % (
            str(relation.child_event),
            str(relation.parent_event)))

def reverse_event_inheritance(apps, schema_editor):
    EventContainer = apps.get_model("scheduler", "EventContainer")
    Event = apps.get_model("scheduler", "Event")
    for event in Event.objects.filter(parent__isnull=False):
        if not EventContainer.objects.filter(child_event=event).exists():
            container = EventContainer(parent_event=event.parent,
                                       child_event=event)
            container.save()
            print("reverted %s with parent %s" % (
                str(container.child_event),
                str(container.parent_event)))

class Migration(migrations.Migration):

    dependencies = [
        ('scheduler', '0005_auto_20221113_2158'),
    ]

    operations = [
        migrations.RunPython(migrate_event_inheritance,
                             reverse_code=reverse_event_inheritance)
    ]
