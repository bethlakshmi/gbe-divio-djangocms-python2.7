# Generated by Django 3.2.16 on 2022-11-18 23:17

from django.db import migrations


def move_to_scheduler_events(apps, schema_editor):
    TicketingEvents = apps.get_model("ticketing", "TicketingEvents")
    RoleExclusion = apps.get_model("ticketing", "RoleExclusion")
    schedEvent = apps.get_model("scheduler", "Event")

    for event in TicketingEvents.objects.all():
        for linked_event in event.linked_events.all():
            for sched_event in schedEvent.objects.filter(
                    eventitem_id=linked_event.eventitem_id):
                event.linked_events_2.add(sched_event)
                event.save()
                print("moved event %s" % sched_event.title)
    for role_exclusion in RoleExclusion.objects.filter(event__isnull=False):
        sched_event = schedEvent.objects.get(
                eventitem_id=role_exclusion.event.eventitem_id)
        role_exclusion.event_2 = sched_event
        role_exclusion.save()


def back_to_gbe_events(apps, schema_editor):
    TicketingEvents = apps.get_model("ticketing", "TicketingEvents")
    RoleExclusion = apps.get_model("ticketing", "RoleExclusion")
    gbeEvent = apps.get_model("gbe", "Event")
    for event in TicketingEvents.objects.all():
        for linked_event in event.linked_events_2.all():
            event.linked_events.add(gbeEvent.objects.get(
                eventitem_id=linked_event.eventitem.eventitem_id))
            event.save()
    for role_exclusion in RoleExclusion.objects.filter(event_2__isnull=False):
        role_exclusion.event = gbeEvent.objects.get(
                eventitem_id=role_exclusion.event_2.eventitem.eventitem_id)
        role_exclusion.save()


class Migration(migrations.Migration):

    dependencies = [
        ('ticketing', '0009_auto_20221118_2314'),
    ]

    operations = [
        migrations.RunPython(move_to_scheduler_events,
                             reverse_code=back_to_gbe_events)
    ]
