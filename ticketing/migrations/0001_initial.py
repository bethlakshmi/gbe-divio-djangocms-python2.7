# Generated by Django 3.0.8 on 2020-08-23 18:04

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('gbe', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='BrownPaperEvents',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bpt_event_id', models.CharField(max_length=10, unique=True)),
                ('act_submission_event', models.BooleanField(default=False, verbose_name='Act Fee')),
                ('vendor_submission_event', models.BooleanField(default=False, verbose_name='Vendor Fee')),
                ('include_conference', models.BooleanField(default=False)),
                ('include_most', models.BooleanField(default=False)),
                ('badgeable', models.BooleanField(default=False)),
                ('ticket_style', models.CharField(blank=True, max_length=50)),
                ('description', models.TextField(blank=True, null=True)),
                ('title', models.CharField(blank=True, max_length=50, null=True)),
                ('display_icon', models.CharField(blank=True, max_length=50)),
                ('conference', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ticketing_item', to='gbe.Conference')),
                ('linked_events', models.ManyToManyField(blank=True, related_name='ticketing_item', to='gbe.Event')),
            ],
            options={
                'verbose_name_plural': 'Brown Paper Events',
            },
        ),
        migrations.CreateModel(
            name='BrownPaperSettings',
            fields=[
                ('developer_token', models.CharField(max_length=15, primary_key=True, serialize=False)),
                ('client_username', models.CharField(max_length=30)),
                ('last_poll_time', models.DateTimeField()),
            ],
            options={
                'verbose_name_plural': 'Brown Paper Settings',
            },
        ),
        migrations.CreateModel(
            name='CheckListItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='EligibilityCondition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('checklistitem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ticketing_eligibilitycondition', to='ticketing.CheckListItem')),
            ],
        ),
        migrations.CreateModel(
            name='PayPalSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('business_email', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name_plural': 'PayPal Settings',
            },
        ),
        migrations.CreateModel(
            name='Purchaser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('address', models.TextField()),
                ('city', models.CharField(max_length=50)),
                ('state', models.CharField(max_length=50)),
                ('zip', models.CharField(max_length=50)),
                ('country', models.CharField(max_length=50)),
                ('email', models.CharField(max_length=50)),
                ('phone', models.CharField(max_length=50)),
                ('matched_to_user', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TicketItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ticket_id', models.CharField(max_length=30)),
                ('title', models.CharField(max_length=50)),
                ('cost', models.DecimalField(decimal_places=2, max_digits=20)),
                ('datestamp', models.DateTimeField(auto_now=True)),
                ('modified_by', models.CharField(max_length=30)),
                ('live', models.BooleanField(default=False)),
                ('add_on', models.BooleanField(default=False)),
                ('has_coupon', models.BooleanField(default=False)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('is_minimum', models.BooleanField(default=False)),
                ('bpt_event', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='ticketitems', to='ticketing.BrownPaperEvents')),
            ],
            options={
                'ordering': ['cost'],
            },
        ),
        migrations.CreateModel(
            name='RoleEligibilityCondition',
            fields=[
                ('eligibilitycondition_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='ticketing.EligibilityCondition')),
                ('role', models.CharField(choices=[('Interested', 'Interested'), ('Moderator', 'Moderator'), ('Panelist', 'Panelist'), ('Performer', 'Performer'), ('Producer', 'Producer'), ('Staff Lead', 'Staff Lead'), ('Teacher', 'Teacher'), ('Technical Director', 'Technical Director'), ('Volunteer', 'Volunteer'), ('Rejected', 'Rejected'), ('Waitlisted', 'Waitlisted'), ('Pending Volunteer', 'Pending Volunteer')], max_length=25)),
            ],
            bases=('ticketing.eligibilitycondition',),
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=20)),
                ('order_date', models.DateTimeField()),
                ('shipping_method', models.CharField(max_length=50)),
                ('order_notes', models.TextField()),
                ('reference', models.CharField(max_length=30)),
                ('payment_source', models.CharField(max_length=30)),
                ('import_date', models.DateTimeField(auto_now=True)),
                ('invoice', models.CharField(blank=True, max_length=100, null=True)),
                ('custom', models.CharField(blank=True, max_length=100, null=True)),
                ('purchaser', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ticketing.Purchaser')),
                ('ticket_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ticketing.TicketItem')),
            ],
        ),
        migrations.CreateModel(
            name='TicketingExclusion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('condition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ticketing_ticketingexclusion', to='ticketing.EligibilityCondition')),
                ('tickets', models.ManyToManyField(to='ticketing.TicketItem')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RoleExclusion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('Interested', 'Interested'), ('Moderator', 'Moderator'), ('Panelist', 'Panelist'), ('Performer', 'Performer'), ('Producer', 'Producer'), ('Staff Lead', 'Staff Lead'), ('Teacher', 'Teacher'), ('Technical Director', 'Technical Director'), ('Volunteer', 'Volunteer'), ('Rejected', 'Rejected'), ('Waitlisted', 'Waitlisted'), ('Pending Volunteer', 'Pending Volunteer')], max_length=25)),
                ('condition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ticketing_roleexclusion', to='ticketing.EligibilityCondition')),
                ('event', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='gbe.Event')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EventDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('detail', models.CharField(blank=True, max_length=50)),
                ('bpt_event', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='ticketing.BrownPaperEvents')),
            ],
        ),
        migrations.CreateModel(
            name='TicketingEligibilityCondition',
            fields=[
                ('eligibilitycondition_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='ticketing.EligibilityCondition')),
                ('tickets', models.ManyToManyField(to='ticketing.TicketItem')),
            ],
            bases=('ticketing.eligibilitycondition',),
        ),
    ]
